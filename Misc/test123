local txt = script.Parent
local HttpService = game:GetService("HttpService")
local is_authed = false

task.wait(1)
txt.Text = "Checking Connection"
task.wait(1)
txt.Text = "Connecting to Server"
task.wait(1)
txt.Text = "Successfully Connected to Server"
task.wait(1)
txt.Text = "Checking Key"

local function checkIP()
	local ipSuccess, ip = pcall(function()
		return game:HttpGet("https://api.ipify.org")
	end)

	if not ipSuccess or not ip or ip == "" then
		txt.Text = "Failed to get Key. Please contact owner!"
		return false
	end

	local url = "https://keysystem-s10c.onrender.com/keyinfo/" .. HttpService:UrlEncode(ip)
	local success, response = pcall(function()
		return game:HttpGet(url)
	end)

	if success and response then
		local data = HttpService:JSONDecode(response)
		if data.has_key == true then
			txt.Text = "Key is authorized!"
			return true
		else
			txt.Text = "Key not authorized."
		end
	else
		txt.Text = "Failed to check key."
	end

	return false
end

-- Wait until key check is done
if checkIP() then
	task.wait(1)
	txt.Text = "Valid Key"
	task.wait(1)
	txt.Text = "Loading Main UI"
	task.wait(2)
	loadstring(game:HttpGet("https://raw.githubusercontent.com/Ted291504/Hybrid/refs/heads/main/UI/Main%20UI", true))()
	Hybrid_Loader:Destroy()
else
	local Notification = Instance.new("Frame")
	local UICorner = Instance.new("UICorner")
	local UIStroke = Instance.new("UIStroke")
	local Title = Instance.new("TextLabel")
	local Description = Instance.new("TextLabel")

	Notification.Name = "Notification"
	Notification.Parent = game.StarterGui.Hybrid_Loader
	Notification.BackgroundColor3 = Color3.fromRGB(8, 8, 8)
	Notification.Position = UDim2.new(0.754, 0, 0.822, 0)
	Notification.Size = UDim2.new(0, 155, 0, 55)

	UICorner.Parent = Notification
	UIStroke.Parent = Notification
	UIStroke.Color = Color3.fromRGB(35, 35, 35)

	Title.Name = "Title"
	Title.Parent = Notification
	Title.BackgroundTransparency = 1
	Title.Position = UDim2.new(0.176, 0, -0.13, 0)
	Title.Size = UDim2.new(0, 100, 0, 38)
	Title.Font = Enum.Font.SourceSans
	Title.Text = "Invalid Key!"
	Title.TextColor3 = Color3.fromRGB(54, 54, 54)
	Title.TextSize = 20
	Title.TextWrapped = true

	Description.Name = "Description"
	Description.Parent = Notification
	Description.BackgroundTransparency = 1
	Description.Position = UDim2.new(-0.058, 0, 0.307, 0)
	Description.Size = UDim2.new(0, 173, 0, 38)
	Description.Font = Enum.Font.SourceSans
	Description.Text = "Your key is invalid!"
	Description.TextColor3 = Color3.fromRGB(54, 54, 54)
	Description.TextSize = 15
	Description.TextWrapped = true

	local TweenService = game:GetService("TweenService")

	local function showNotification(frame)
		local stroke = frame.UIStroke
		frame.AnchorPoint = Vector2.new(1, 1)
		frame.Position = UDim2.new(1, 200, 1, -10)
		frame.BackgroundTransparency = 1
		stroke.Transparency = 1
		frame.Visible = true

		local fadeIn = TweenService:Create(frame, TweenInfo.new(0.3), {BackgroundTransparency = 0})
		local fadeOut = TweenService:Create(frame, TweenInfo.new(0.3), {BackgroundTransparency = 1})
		local strokeIn = TweenService:Create(stroke, TweenInfo.new(0.3), {Transparency = 0})
		local strokeOut = TweenService:Create(stroke, TweenInfo.new(0.3), {Transparency = 1})
		local slideIn = TweenService:Create(frame, TweenInfo.new(0.6, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
			Position = UDim2.new(1, -10, 1, -10)
		})
		local slideOut = TweenService:Create(frame, TweenInfo.new(0.6, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {
			Position = UDim2.new(1, 200, 1, -10)
		})

		fadeIn:Play()
		strokeIn:Play()
		slideIn:Play()
		slideIn.Completed:Wait()

		task.wait(2)

		fadeOut:Play()
		strokeOut:Play()
		slideOut:Play()
	end

	coroutine.wrap(function()
		showNotification(Notification)
	end)()

	task.wait(1)
	txt.Text = "Invalid Key"
	task.wait(1)
	txt.Text = "Loading Key System"
	task.wait(2)
	loadstring(game:HttpGet("https://raw.githubusercontent.com/Ted291504/Hybrid/refs/heads/main/UI/Main%20UI", true))()
	Hybrid_Loader:Destroy()
end
