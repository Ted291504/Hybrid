local HttpService = game:GetService("HttpService")
local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

local function createNotification(text)
    -- Create ScreenGui
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "KeyNotificationGui"
    screenGui.ResetOnSpawn = false
    screenGui.Parent = playerGui

    -- Create Frame (notification box)
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, 300, 0, 80)
    frame.Position = UDim2.new(0.5, -150, 0, 50)
    frame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    frame.BorderSizePixel = 0
    frame.BackgroundTransparency = 1
    frame.AnchorPoint = Vector2.new(0.5, 0)

    -- Rounded corners
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 12)
    corner.Parent = frame

    frame.Parent = screenGui

    -- Create TextLabel
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, -20, 1, -20)
    label.Position = UDim2.new(0, 10, 0, 10)
    label.BackgroundTransparency = 1
    label.TextColor3 = Color3.fromRGB(200, 200, 200)
    label.TextStrokeTransparency = 0.7
    label.Font = Enum.Font.GothamBold
    label.TextSize = 18
    label.Text = text
    label.Parent = frame

    -- Tween fade in
    local fadeIn = TweenService:Create(frame, TweenInfo.new(0.5), {BackgroundTransparency = 0})
    fadeIn:Play()

    -- After fade in, stay 4 seconds, then fade out
    fadeIn.Completed:Connect(function()
        wait(4)
        local fadeOut = TweenService:Create(frame, TweenInfo.new(0.5), {BackgroundTransparency = 1})
        fadeOut:Play()
        fadeOut.Completed:Connect(function()
            screenGui:Destroy()
        end)
    end)
end

local function getKeyInfo(input)
    local url = "https://keysystem-s10c.onrender.com/getKeyInfo?" .. (input:match("^%d+%.%d+%.%d+%.%d+$") and "ip=" or "key=") .. input

    local response = request({
        Url = url,
        Method = "GET"
    })

    if not response or not response.Success then
        createNotification("Failed to get key info.")
        return
    end

    local data = HttpService:JSONDecode(response.Body)
    if data.expiration then
        local expTime = DateTime.fromIsoDate(data.expiration):ToUnixTimestamp()
        local now = os.time()
        local secondsLeft = math.max(expTime - now, 0)

        local hrs = math.floor(secondsLeft / 3600)
        local mins = math.floor((secondsLeft % 3600) / 60)
        local secs = secondsLeft % 60

        local timeStr = string.format("%02dh %02dm %02ds left", hrs, mins, secs)
        createNotification("Key Time Left: " .. timeStr)
    else
        createNotification("Key not found or expired.")
    end
end

-- Example usage: replace with real IP or key
getKeyInfo("34.211.200.85")
