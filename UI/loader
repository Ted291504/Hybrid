local Hybrid_Loader = Instance.new("ScreenGui")
local Main = Instance.new("Frame")
local UICorner = Instance.new("UICorner")
local UIStroke = Instance.new("UIStroke")
local Welcome = Instance.new("TextLabel")
local Loading = Instance.new("TextLabel")

Hybrid_Loader.Name = "Hybrid_Loader"
Hybrid_Loader.Parent = cloneref(gethui())
Hybrid_Loader.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
Hybrid_Loader.ResetOnSpawn = false

Main.Name = "Main"
Main.Parent = Hybrid_Loader
Main.BackgroundColor3 = Color3.fromRGB(8, 8, 8)
Main.BorderColor3 = Color3.fromRGB(0, 0, 0)
Main.BorderSizePixel = 0
Main.Position = UDim2.new(0.349, 0, -1, 0)
Main.Size = UDim2.new(0, 263, 0, 211)
Main.Visible = false

UICorner.Parent = Main
UIStroke.Parent = Main
UIStroke.Color = Color3.fromRGB(35, 35, 35)

Welcome.Name = "Welcome"
Welcome.Parent = Main
Welcome.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Welcome.BackgroundTransparency = 1
Welcome.BorderColor3 = Color3.fromRGB(0, 0, 0)
Welcome.BorderSizePixel = 0
Welcome.Position = UDim2.new(0.119, 0, 0, 0)
Welcome.Size = UDim2.new(0, 200, 0, 50)
Welcome.Font = Enum.Font.TitilliumWeb
Welcome.Text = "Welcome to Hybrid"
Welcome.TextColor3 = Color3.fromRGB(54, 54, 54)
Welcome.TextSize = 35

Loading.Name = "Loading"
Loading.Parent = Main
Loading.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Loading.BackgroundTransparency = 1
Loading.BorderColor3 = Color3.fromRGB(0, 0, 0)
Loading.BorderSizePixel = 0
Loading.Position = UDim2.new(0.119, 0, 0.66, 0)
Loading.Size = UDim2.new(0, 200, 0, 50)
Loading.Font = Enum.Font.TitilliumWeb
Loading.Text = "Loading"
Loading.TextColor3 = Color3.fromRGB(54, 54, 54)
Loading.TextSize = 25

local TweenService = game:GetService("TweenService")

local function showUI()
	Main.Visible = true
	TweenService:Create(Main, TweenInfo.new(0.8, Enum.EasingStyle.Quint), {
		Position = UDim2.new(0.349, 0, 0.189, 0)
	}):Play()
end

local function hideUI()
	TweenService:Create(Main, TweenInfo.new(0.8, Enum.EasingStyle.Quint), {
		Position = UDim2.new(0.349, 0, -1, 0)
	}):Play()
end

local function IXTXFY_script()
	local script = Instance.new('LocalScript', Loading)
	local key = readfile("HybridKey.txt")
	local txt = script.Parent
	local KeyGuardLibrary = loadstring(game:HttpGet("https://raw.githubusercontent.com/nathzzi/Rift-Android/refs/heads/main/keyguardian/keyguardianlibrary.lua"))()
	local trueData = "729b2d0813534812951c1ead7ee7e10a"
	local falseData = "a9051db43f4e452fa47e4c81a0727cb6"

	KeyGuardLibrary.Set({
		publicToken = "e423a2fdba5842a68919e6f8fb714064",
		privateToken = "930ecef53c674a3bb5bca1576577716f",
		trueData = trueData,
		falseData = falseData,
	})

	showUI()

	task.wait(1)
	txt.Text = "Checking Connection"
	task.wait(1)
	txt.Text = "Connecting to Server"
	task.wait(1)
	txt.Text = "Successfully Connected to Server"
	task.wait(1)
	txt.Text = "Checking Key"

	if isfile(key) and KeyGuardLibrary.validateDefaultKey(key) == trueData or KeyGuardLibrary.validatePremiumKey(key) == trueData then
		task.wait(1)
		txt.Text = "Valid Key"
		task.wait(1)
		txt.Text = "Loading Main UI"
		task.wait(2)
		loadstring(game:HttpGet("https://raw.githubusercontent.com/Ted291504/Hybrid/refs/heads/main/UI/Main%20UI", true))()
		Hybrid_Loader:Destroy()
	else
		local Notification = Instance.new("Frame")
		local UICorner = Instance.new("UICorner")
		local UIStroke = Instance.new("UIStroke")
		local Title = Instance.new("TextLabel")
		local Description = Instance.new("TextLabel")

		Notification.Name = "Notification"
		Notification.Parent = Hybrid_Loader
		Notification.BackgroundColor3 = Color3.fromRGB(8, 8, 8)
		Notification.Size = UDim2.new(0, 155, 0, 55)
		Notification.AnchorPoint = Vector2.new(1, 1)
		Notification.Position = UDim2.new(1, 200, 1, -10)
		Notification.BackgroundTransparency = 1
		Notification.Visible = true

		UICorner.Parent = Notification
		UIStroke.Parent = Notification
		UIStroke.Color = Color3.fromRGB(35, 35, 35)
		UIStroke.Transparency = 1

		Title.Name = "Title"
		Title.Parent = Notification
		Title.BackgroundTransparency = 1
		Title.Position = UDim2.new(0.1, 0, 0, 0)
		Title.Size = UDim2.new(1, -20, 0.5, 0)
		Title.Font = Enum.Font.SourceSans
		Title.Text = "Invalid Key!"
		Title.TextColor3 = Color3.fromRGB(255, 255, 255)
		Title.TextSize = 18
		Title.TextWrapped = true

		Description.Name = "Description"
		Description.Parent = Notification
		Description.BackgroundTransparency = 1
		Description.Position = UDim2.new(0.1, 0, 0.5, 0)
		Description.Size = UDim2.new(1, -20, 0.5, 0)
		Description.Font = Enum.Font.SourceSans
		Description.Text = "Your key is invalid!"
		Description.TextColor3 = Color3.fromRGB(255, 255, 255)
		Description.TextSize = 14
		Description.TextWrapped = true

		local slideIn = TweenService:Create(Notification, TweenInfo.new(0.6, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
			Position = UDim2.new(1, -10, 1, -10),
			BackgroundTransparency = 0
		})

		local strokeIn = TweenService:Create(UIStroke, TweenInfo.new(0.3), {
			Transparency = 0
		})

		local slideOut = TweenService:Create(Notification, TweenInfo.new(0.6, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {
			Position = UDim2.new(1, 200, 1, -10),
			BackgroundTransparency = 1
		})

		local strokeOut = TweenService:Create(UIStroke, TweenInfo.new(0.3), {
			Transparency = 1
		})

		slideIn:Play()
		strokeIn:Play()
		slideIn.Completed:Wait()

		task.wait(2)

		slideOut:Play()
		strokeOut:Play()

		task.wait(1)
		txt.Text = "Invalid Key"
		task.wait(1)
		txt.Text = "Loading Key System"
		task.wait(2)
		loadstring(game:HttpGet("https://raw.githubusercontent.com/Ted291504/Hybrid/refs/heads/main/UI/Main%20UI", true))()
		Hybrid_Loader:Destroy()
	end
end

coroutine.wrap(IXTXFY_script)()
